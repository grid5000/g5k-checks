# This is important to avoid stale artifacts in the build directory
variables:
  GIT_STRATEGY: clone

# Another stage is needed for the deployment (so that files are already generated by the previous job)
stages:
 - lint
 - build
 - deploy_and_test
 - deploy

include:
  - project: 'grid5000/grid5000-gitlab-templates'
    ref: master
    file: '/rubocop.yml'

.build: &build
  stage: build
  tags:
   - grid5000-docker
  script:
   - apt-get update && apt-get -y --no-install-recommends install devscripts build-essential equivs
   - mk-build-deps -ir -t 'apt-get -y --no-install-recommends'
   - rm -f ../*deb
   - dpkg-buildpackage
   - mkdir $TARGETDIR
   - cp ../*deb $TARGETDIR/ # needed to upload it as artifact
  except:
     - tags

.build-bullseye: &build-bullseye
  <<: *build
  variables:
    TARGETDIR: "bullseye"
  artifacts: # generate artifacts for files we want to publish
     paths:
      - bullseye
     expire_in: '1 month'

build-bullseye:amd64:
  <<: *build-bullseye
  image: debian:bullseye

build-bullseye:arm64:
  <<: *build-bullseye
  image: 
    name: arm64v8/debian:bullseye
    docker:
      platform: aarch64
  tags:
    - grid5000-docker-arm64

build-bullseye:ppc64:
  <<: *build-bullseye
  image: ppc64le/debian:bullseye
  before_script:
   - cat /etc/apt/sources.list | grep -v security | sed 's/deb.debian/archive.debian/g' > /tmp/sources.list
   - mv /tmp/sources.list /etc/apt/sources.list
  tags:
    - grid5000-docker-ppc64

test-bullseye:
  stage: deploy_and_test
  variables:
    TARGETDIR: "bullseye"
  tags:
    - grid5000-shell
  script:
    - .gitlab-ci/test-g5k-checks $TARGETDIR
  except:
    - tags

push-package:
  stage: deploy_and_test
  # tags must be 'packages' so that we use the runner on packages.grid5000.fr
  tags:
    - grid5000-packages
  only:
    - master
  when: manual
  script:
    - g5k-deploy-files --only-if-tag --files 'bullseye/*.deb' --directory deb/g5k-checks/bullseye
  allow_failure: false
