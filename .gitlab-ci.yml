# This is important to avoid stale artifacts in the build directory
variables:
  GIT_STRATEGY: clone

# Another stage is needed for the deployment (so that files are already generated by the previous job)
stages:
 - build
 - deploy_and_test
 - deploy

build-stretch: &build-stretch
  stage: build
  variables:
    TARGETDIR: "stretch"
  tags:
   - grid5000-docker
  image: debian:stretch
  script:
   - apt-get update && apt-get -y --no-install-recommends install devscripts build-essential equivs
   - mk-build-deps -ir -t 'apt-get -y --no-install-recommends'
   - dpkg-buildpackage
   - mkdir $TARGETDIR
   - cp ../*deb $TARGETDIR/ # needed to upload it as artifact
  except:
     - tags
  artifacts: # generate artifacts for files we want to publish
     paths:
      - stretch
     expire_in: '1 month'


build-buster:
  <<: *build-stretch
  image: debian:buster
  variables:
    TARGETDIR: "buster"
  artifacts: # generate artifacts for files we want to publish
     paths:
      - buster
     expire_in: '1 day'

build-buster-arm64:
  <<: *build-stretch
  image: arm64v8/debian:buster
  variables:
    TARGETDIR: "buster"
  tags:
    - grid5000-docker-arm64
  artifacts: # generate artifacts for files we want to publish
     paths:
      - buster
     expire_in: '1 month'

test-buster:
  stage: deploy_and_test
  variables:
    TARGETDIR: "buster"
  tags:
    - grid5000-shell
  script:
    - .gitlab-ci/test-g5k-checks $TARGETDIR
  except:
    - tags

push-package:
  stage: deploy_and_test
  # tags must be 'packages' so that we use the runner on packages.grid5000.fr
  tags:
    - grid5000-packages
  only:
    - master
  when: manual
  script:
    - g5k-deploy-files --only-if-tag --files 'stretch/*.deb' --directory deb/g5k-checks/stretch
    - g5k-deploy-files --only-if-tag --files 'buster/*.deb' --directory deb/g5k-checks/buster
