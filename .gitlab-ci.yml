# This is important to avoid stale artifacts in the build directory
variables:
  GIT_STRATEGY: clone

# Another stage is needed for the deployment (so that files are already generated by the previous job)
stages:
 - lint
 - build
 - deploy_and_test
 - deploy

include:
  - project: 'grid5000/grid5000-gitlab-templates'
    ref: master
    file: '/sonarqube.yml'

rubocop:
  image: debian:buster
  stage: lint
  tags:
    - grid5000-docker
  script:
    - apt-get update && apt-get -y --no-install-recommends install rubygems build-essential ruby-dev
    - gem install rubocop
    - rubocop -l
  except:
    - tags

.build: &build
  stage: build
  tags:
   - grid5000-docker
  script:
   - apt-get update && apt-get -y --no-install-recommends install devscripts build-essential equivs
   - mk-build-deps -ir -t 'apt-get -y --no-install-recommends'
   - rm -f ../*deb
   - dpkg-buildpackage
   - mkdir $TARGETDIR
   - cp ../*deb $TARGETDIR/ # needed to upload it as artifact
  except:
     - tags

build-stretch: &build-stretch
  <<: *build
  variables:
    TARGETDIR: "stretch"
  image: debian:stretch
  artifacts: # generate artifacts for files we want to publish
     paths:
      - stretch
     expire_in: '1 month'

.build-buster: &build-buster
  <<: *build
  variables:
    TARGETDIR: "buster"
  artifacts: # generate artifacts for files we want to publish
     paths:
      - buster
     expire_in: '1 month'

build-buster:amd64:
  <<: *build-buster
  image: debian:buster

build-buster:arm64:
  <<: *build-buster
  image: arm64v8/debian:buster
  tags:
    - grid5000-docker-arm64

build-buster:ppc64:
  <<: *build-buster
  image: ppc64le/debian:buster
  tags:
    - grid5000-docker-ppc64

.build-bullseye: &build-bullseye
  <<: *build
  variables:
    TARGETDIR: "bullseye"
  artifacts: # generate artifacts for files we want to publish
     paths:
      - bullseye
     expire_in: '1 month'

build-bullseye:amd64:
  <<: *build-bullseye
  image: debian:bullseye

build-bullseye:arm64:
  <<: *build-bullseye
  image: arm64v8/debian:bullseye
  tags:
    - grid5000-docker-arm64

build-bullseye:ppc64:
  <<: *build-bullseye
  image: ppc64le/debian:bullseye
  tags:
    - grid5000-docker-ppc64

test-buster:
  stage: deploy_and_test
  variables:
    TARGETDIR: "buster"
  tags:
    - grid5000-shell
  script:
    - .gitlab-ci/test-g5k-checks $TARGETDIR
  except:
    - tags

push-package:
  stage: deploy_and_test
  # tags must be 'packages' so that we use the runner on packages.grid5000.fr
  tags:
    - grid5000-packages
  only:
    - master
  when: manual
  script:
    - g5k-deploy-files --only-if-tag --files 'stretch/*.deb' --directory deb/g5k-checks/stretch
    - g5k-deploy-files --only-if-tag --files 'buster/*.deb' --directory deb/g5k-checks/buster
    - g5k-deploy-files --only-if-tag --files 'bullseye/*.deb' --directory deb/g5k-checks/bullseye
